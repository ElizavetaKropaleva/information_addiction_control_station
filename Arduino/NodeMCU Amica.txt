#include <Arduino.h>
#include <ESP8266WiFi.h>
#include <ESP_Mail_Client.h>
#include <SoftwareSerial.h>
int RX = D7;
int TX = D8;
SoftwareSerial mySerial(RX, TX); // Устанавливаем Serial на пины D7 и D8
String textMsg = "";
#define WIFI_SSID "ssid" // Устанавливается вручную под любую используемую сеть
#define WIFI_PASSWORD "password"
#define SMTP_server "smtp.gmail.com"
#define SMTP_Port 465

#define sender_email "sender" // Инструкция по настройке почты находится в “Схемы подключения - NodeMCU Amica”
#define sender_password "sender_password" // Здесь вписываем пароль приложения (НЕ пароль почты)

#define Recipient_email "recipient_email" // Указывается любая почта

SMTPSession smtp;
ESP_Mail_Session session;
SMTP_Message message;

void setup(){
  Serial.begin(115200);
  mySerial.begin(115200); // Инициализируем SoftwareSerial для общения с Arduino
  mySerial.listen();    // и указываем NodeMCU слушать только этот порт
  Serial.println();
  Serial.print("Connecting...");
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  while (WiFi.status() != WL_CONNECTED){
    Serial.print(".");
    delay(200);
  }
  Serial.println("");
  Serial.println("WiFi connected.");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
  Serial.println();
  smtp.debug(1); 
  message.addRecipient("StationProject",Recipient_email); // Добавляем получателя
}

void loop(){
    textMsg = "";
    if (mySerial.available() > 0) {  // Если приходят данные с Arduino
      textMsg = mySerial.readString();       
      session.server.host_name = SMTP_server; // то отправляем их через почту
      session.server.port = SMTP_Port;
      session.login.email = sender_email;
      session.login.password = sender_password;
      session.login.user_domain = "";
    
      message.sender.name = "ESP8266";
      message.sender.email = sender_email;
      message.subject = "StationProjectReport";
  
      message.text.content = textMsg.c_str();
      message.text.charSet = "us-ascii";  
      message.text.transfer_encoding = Content_Transfer_Encoding::enc_7bit;
      if (!smtp.connect(&session))
        return;
      if (!MailClient.sendMail(&smtp, &message))
        Serial.println("Error sending Email, " + smtp.errorReason()); 
      }             
}
